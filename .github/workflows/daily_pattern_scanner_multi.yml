name: Daily Pattern Scanner - Multi-Ticker

on:
  schedule:
    # Run at 4:30 PM ET daily (after market close)
    - cron: '30 20 * * 1-5'  # EST: 4:30 PM ET
    - cron: '30 21 * * 1-5'  # EDT: 4:30 PM ET
  
  workflow_dispatch:  # Allow manual trigger
    inputs:
      tickers:
        description: 'Comma-separated list of tickers (default: all)'
        required: false
        default: 'NVDA,AAPL,MSFT,BTC-USD,AC.TO'
        type: string

jobs:
  scan-daily-patterns:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libhdf5-dev
    
    - name: Install TA-Lib
      run: |
        # Download and compile TA-Lib from source
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        # Update library cache and create symlinks
        sudo ldconfig
        
        # Verify installation and fix library naming issues
        echo "Checking installed files..."
        ls -la /usr/lib/libta_lib* || echo "No libta_lib found in /usr/lib"
        ls -la /usr/lib/libta-lib* || echo "No libta-lib found in /usr/lib"
        ls -la /usr/include/ta-lib/ || echo "No headers found"
        
        # Create symlinks with both naming conventions if needed
        if [ -f /usr/lib/libta_lib.so.0.0.0 ]; then
          sudo ln -sf /usr/lib/libta_lib.so.0.0.0 /usr/lib/libta_lib.so
          sudo ln -sf /usr/lib/libta_lib.so.0.0.0 /usr/lib/libta_lib.so.0
          # Also create hyphenated versions that some systems expect
          sudo ln -sf /usr/lib/libta_lib.so.0.0.0 /usr/lib/libta-lib.so
          sudo ln -sf /usr/lib/libta_lib.so.0.0.0 /usr/lib/libta-lib.so.0
        fi
        
        # Update library cache again
        sudo ldconfig -v 2>/dev/null | grep -E 'ta_lib|ta-lib' || echo "Library not found in ldconfig"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        
        # Install other dependencies first
        pip install yfinance pandas numpy azure-storage-blob python-dotenv
        
        # Install TA-Lib Python wrapper with specific version and environment variables
        export LD_LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/local/lib:$LD_LIBRARY_PATH
        export LIBRARY_PATH=/usr/lib:/usr/lib64:/usr/local/lib:$LIBRARY_PATH
        export CPATH=/usr/include:/usr/local/include:$CPATH
        
        # Try to install TA-Lib Python wrapper with retry
        echo "Attempting to install TA-Lib Python wrapper..."
        for i in {1..3}; do
          if pip install --no-cache-dir TA-Lib==0.4.19; then
            echo "TA-Lib installation successful on attempt $i"
            break
          else
            echo "TA-Lib installation failed on attempt $i, retrying..."
            sleep 5
          fi
        done
        
        # Verify installation
        python -c "import talib; print(f'TA-Lib version: {talib.__version__}')"
    
    - name: Create config directory and .env file
      run: |
        mkdir -p config
        cat > config/.env << EOF
        AZURE_STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_KEY=${{ secrets.ACCESS_KEY }}
        AZURE_CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
        EOF
    
    - name: Run daily pattern scanner for all tickers
      run: |
        export TICKER="ALL"
        python daily_pattern_scanner.py
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: multi-ticker-daily-pattern-logs-${{ github.run_id }}
        path: |
          *.log
          *.json
        if-no-files-found: warn
        retention-days: 7

  performance-summary:
    runs-on: ubuntu-latest
    needs: scan-daily-patterns
    # Run at 4:45 PM ET daily to generate performance report (after all scans complete)
    if: |
      github.event_name == 'schedule' && 
      (contains(github.event.schedule, '45 20') || contains(github.event.schedule, '45 21'))
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas azure-storage-blob python-dotenv
    
    - name: Create config directory and .env file
      run: |
        mkdir -p config
        cat > config/.env << EOF
        AZURE_STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_KEY=${{ secrets.ACCESS_KEY }}
        AZURE_CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
        EOF
    
    - name: Generate performance summary for all tickers
      run: |
        python -c "
        from daily_pattern_scanner import DailyPatternScanner
        scanner = DailyPatternScanner()
        evaluations = scanner.load_or_create_evaluation_file()
        total_evals = len(evaluations)
        if total_evals > 0:
            recent_evals = evaluations[-100:] if total_evals > 100 else evaluations
            
            # Analyze by ticker
            tickers = ['NVDA', 'AAPL', 'MSFT', 'BTC-USD', 'AC.TO']
            print('Multi-Ticker Daily Pattern Summary (Recent evaluations):')
            print(f'Total Evaluations: {len(recent_evals)}')
            
            for ticker in tickers:
                ticker_evals = [e for e in recent_evals if e.get('ticker') == ticker]
                if ticker_evals:
                    buy_signals = sum(1 for e in ticker_evals if e.get('recommendation') == 'BUY')
                    sell_signals = sum(1 for e in ticker_evals if e.get('recommendation') == 'SELL')
                    hold_signals = sum(1 for e in ticker_evals if e.get('recommendation') == 'HOLD')
                    avg_confidence = sum(e.get('confidence', 0) for e in ticker_evals) / len(ticker_evals)
                    print(f'{ticker}: {len(ticker_evals)} evals - Buy: {buy_signals}, Sell: {sell_signals}, Hold: {hold_signals}, Avg Conf: {avg_confidence:.1%}')
                else:
                    print(f'{ticker}: No evaluations yet')
        else:
            print('No evaluation data available yet')
        "
    
    - name: Create issue with daily summary
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const date = new Date().toISOString().split('T')[0];
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Daily Pattern Scanner Summary - Multi-Ticker - ${date}`,
            body: `Today's daily chart patterns have been analyzed for NVDA, AAPL, MSFT, BTC-USD, and AC.TO. Check the next_day_technical/ folder in Azure for unified daily_predictions.json and pattern_evaluations.json files.`,
            labels: ['automated', 'daily-report', 'pattern-scanner', 'multi-ticker']
          });