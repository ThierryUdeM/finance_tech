name: Combined Pattern Scanner and Evaluator

on:
  schedule:
    # Run scanner every 15 minutes during market hours (9:30 AM - 4:00 PM ET)
    # GitHub Actions uses UTC time, so 9:30 AM ET = 2:30 PM UTC (during EST)
    # and 1:30 PM UTC during EDT
    - cron: '0,15,30,45 14-20 * * 1-5'  # EST: runs every 15 minutes
    - cron: '0,15,30,45 13-19 * * 1-5'  # EDT: runs every 15 minutes
    # Run evaluator at 4:30 PM ET (after market close)
    - cron: '30 21 * * 1-5'  # EST: 4:30 PM ET = 9:30 PM UTC
    - cron: '30 20 * * 1-5'  # EDT: 4:30 PM ET = 8:30 PM UTC
  
  workflow_dispatch:  # Allow manual trigger
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'scan'
        type: choice
        options:
          - scan
          - evaluate
          - both
          - end-of-day
      ticker:
        description: 'Stock ticker'
        required: true
        default: 'NVDA'
        type: string

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      market-open: ${{ steps.check-market.outputs.is-open }}
    
    steps:
    - name: Check if market is open
      id: check-market
      run: |
        # Get current time in ET
        CURRENT_HOUR=$(TZ='America/New_York' date +%H)
        CURRENT_MIN=$(TZ='America/New_York' date +%M)
        CURRENT_DAY=$(TZ='America/New_York' date +%u)
        
        # Check if it's a weekday (1-5)
        if [ $CURRENT_DAY -gt 5 ]; then
          echo "is-open=false" >> $GITHUB_OUTPUT
          echo "Market is closed (weekend)"
          exit 0
        fi
        
        # Check if market hours (9:30 AM - 4:00 PM ET)
        CURRENT_TIME=$((CURRENT_HOUR * 60 + CURRENT_MIN))
        MARKET_OPEN=$((9 * 60 + 30))
        MARKET_CLOSE=$((16 * 60))
        
        if [ $CURRENT_TIME -ge $MARKET_OPEN ] && [ $CURRENT_TIME -lt $MARKET_CLOSE ]; then
          echo "is-open=true" >> $GITHUB_OUTPUT
          echo "Market is open"
        else
          echo "is-open=false" >> $GITHUB_OUTPUT
          echo "Market is closed"
        fi

  scan-patterns:
    needs: setup-environment
    if: |
      (github.event_name == 'schedule' && needs.setup-environment.outputs.market-open == 'true') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.action == 'scan' || github.event.inputs.action == 'both'))
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget build-essential
        
        # Download and install TA-Lib from source
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        # Update library cache
        sudo ldconfig
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_pattern_scanner.txt
        
        # Try to install TA-Lib Python wrapper
        pip install -r requirements_talib.txt || echo "TA-Lib Python installation failed, continuing without it"
    
    - name: Create config directory and .env file
      run: |
        mkdir -p config
        cat > config/.env << EOF
        AZURE_STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_KEY=${{ secrets.ACCESS_KEY }}
        AZURE_CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
        EOF
    
    - name: Run combined pattern scanner
      run: |
        python combined_pattern_scanner_gh.py
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scan-logs
        path: |
          *.log
          signals_*.json
        if-no-files-found: warn

  evaluate-signals:
    needs: setup-environment
    if: |
      github.event_name == 'workflow_dispatch' && 
      (github.event.inputs.action == 'evaluate' || github.event.inputs.action == 'both')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget build-essential
        
        # Download and install TA-Lib from source
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        # Update library cache
        sudo ldconfig
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_pattern_scanner.txt
        
        # Try to install TA-Lib Python wrapper
        pip install -r requirements_talib.txt || echo "TA-Lib Python installation failed, continuing without it"
    
    - name: Create config directory and .env file
      run: |
        mkdir -p config
        cat > config/.env << EOF
        AZURE_STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_KEY=${{ secrets.ACCESS_KEY }}
        AZURE_CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
        EOF
    
    - name: Evaluate patterns
      run: |
        python pattern_evaluator.py
    
    - name: Upload evaluation results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: evaluation-results
        path: |
          *.log
          evaluation_*.json
        if-no-files-found: warn

  end-of-day-evaluation:
    if: |
      (github.event_name == 'schedule' && 
      (contains(github.event.schedule, '30 21') || contains(github.event.schedule, '30 20'))) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'end-of-day')
    runs-on: ubuntu-latest
    # Run at 4:30 PM ET (after market close) or when manually triggered
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget build-essential
        
        # Download and install TA-Lib from source
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        # Update library cache
        sudo ldconfig
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_pattern_scanner.txt
        
        # Try to install TA-Lib Python wrapper
        pip install -r requirements_talib.txt || echo "TA-Lib Python installation failed, continuing without it" matplotlib
    
    - name: Create config directory and .env file
      run: |
        mkdir -p config
        cat > config/.env << EOF
        AZURE_STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT_NAME }}
        AZURE_STORAGE_KEY=${{ secrets.ACCESS_KEY }}
        AZURE_CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}
        EOF
    
    - name: Run end-of-day comprehensive evaluation
      run: |
        echo "=== End of Day Pattern Evaluation ==="
        echo "Evaluating all patterns detected during today's trading session"
        python pattern_evaluator.py
    
    - name: Create issue with daily report
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const date = new Date().toISOString().split('T')[0];
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Pattern Scanner End-of-Day Evaluation - ${date}`,
            body: 'Today\'s pattern signals have been evaluated. Check the workflow logs for win rates and detailed results.',
            labels: ['automated', 'daily-report']
          });