name: Multi-Ticker YOLO Predictions

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:  # Allow manual triggers

jobs:
  predict:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ChartScanAI_Shiny/requirements.txt
    
    - name: Run predictions and evaluation
      env:
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      run: |
        cd ChartScanAI_Shiny
        python multi_ticker_predictor_azure_volume.py
    
    - name: Create summary
      if: always()
      run: |
        echo "## Multi-Ticker Prediction Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Time**: $(date -u '+%Y-%m-%d %H:%M:%S') UTC" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Tickers Analyzed:" >> $GITHUB_STEP_SUMMARY
        echo "- BTC-USD (Bitcoin)" >> $GITHUB_STEP_SUMMARY
        echo "- NVDA (NVIDIA)" >> $GITHUB_STEP_SUMMARY
        echo "- AC.TO (Air Canada)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Predictions completed - check Azure Storage for results" >> $GITHUB_STEP_SUMMARY

  weekly-report:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 0 * * 0'  # Run on Sundays at midnight
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install azure-storage-blob python-dotenv
    
    - name: Generate weekly report
      env:
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      run: |
        cd ChartScanAI_Shiny
        python -c "from multi_ticker_predictor_azure_volume import VolumeEnhancedMultiTickerPredictor; VolumeEnhancedMultiTickerPredictor().generate_performance_report(days=7)"